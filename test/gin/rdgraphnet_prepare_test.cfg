StandardTestCase.get_processor.target_processor = @ariadne.graph_net.processor.GraphNet_Processor
StandardTestCase.get_processor.output_dir = 'output/tests/cgem_graphnet_test'


parse.input_file='../resources/test_data/cgem_11_events.txt'
parse.csv_params={
                    "sep": '\s+',
                    "encoding": 'utf-8',
                    "names": ['event',  'x', 'y', 'z', 'station', 'track']
                 }
### events_quantity:
# ['1..10'] (list of events with these indexes)
# or [':'] (all events from df)
# or single index ['3']
parse.events_quantity = [':']

StandardTestCase.get_processor.input_file='../resources/test_data/cgem_11_events_preprocessed.txt'
StandardTestCase.get_processor.csv_params={
                    "sep": '\s+',
                    "encoding": 'utf-8'
                 }
StandardTestCase.get_processor.events_quantity = [':']
StandardTestCase.get_processor.constructed_graphs_path = '../resources/test_data/test_graphs'
StandardTestCase.get_processor.prepare_cfg_path='../resources/gin/rdgraphnet_prepare.cfg'

ariadne.graph_net.processor.GraphNet_Processor.df_suffixes = ('_p', '_c')
ariadne.graph_net.processor.GraphNet_Processor.stations_constraints = {
    0: {'x': [-166.6, 166.6], 'y': [-166.6, 166.6], 'z': [-423.5, 423.5]},
    1: {'x': [-166.6, 166.6], 'y': [-166.6, 166.6], 'z': [-423.5, 423.5]},
    2: {'x': [-166.6, 166.6], 'y': [-166.6, 166.6], 'z': [-423.5, 423.5]},
}

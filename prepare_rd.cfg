preprocess.target_processor = @RDGraphNet_Processor
preprocess.output_dir = 'output/spd_sim_prepared/NO_FAKE_RD_'
preprocess.ignore_asserts = True

parse.input_file_mask= './input_data/rd_no_fakes/*.tsv'


parse.csv_params={
                    "sep":'\s+',
                    #"nrows": 500,
                    "encoding": 'utf-8',
                    "names": #['event','x','y','z','px','py','pz','station','track', 'X0', 'Y0', 'Z0']
                              ['event',  'x', 'y', 'z', 'station',
                              'track', 'px', 'py', 'pz', 'X0', 'Y0', 'Z0']
                 }

### events_quantity:
# '1..10' (list of events with these indexes)
# or ':' (all events from df)
# or single index '3'
parse.events_quantity = ':'

# preprocessor
RDGraphNet_Processor.transforms = [
    #@DropSpinningTracks(),
    #@DropShort(),
    #@DropEmpty(),
    #@ToCylindrical(),
    #@ConstraintsNormalize()
]
RDGraphNet_Processor.df_suffixes = ('_p', '_c')
RDGraphNet_Processor.get_pd_line_graph = {
    'restrictions_0':(-0.1,0.1),
    'restrictions_1':(-0.1,0.1),
    'suffix_c': '_c',
    'suffix_p': '_p'
}

RDGraphNet_Processor.normalize = {
   'constraints':[[269., 581.],[-3.15,3.15],[-2386.0,2386.0]],
}


RDGraphNet_Processor.get_supernodes_df = {
    'suffix_c': '_c',
    'suffix_p': '_p',
    'axes':['r', 'phi', 'z']
}
RDGraphNet_Processor.apply_edge_restriction = {'edge_restriction' : 0.02}


#### transformations
DropShort.num_stations=3
ConstraintsNormalize.use_global_constraints = True
ConstraintsNormalize.columns=('r', 'phi', 'z')
ConstraintsNormalize.constraints = {
   'r': [269., 581.], 'phi': [-3.15,3.15], 'z': [-2386.0,2386.0]
    # 'r': [80., 167.], 'phi': [-3.15, 3.15], 'z': [-423.5, 423.5]
}

